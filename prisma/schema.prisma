// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum Role{
  doctor
  superadmin
  patient
}

model Users {
  id                   Int            @id @default(autoincrement())
  firstName            String
  lastName             String
  email                String         @unique
  password             String
  role                 Role           @default(patient)
  created_at           DateTime       @default(now()) @db.Timestamp(0)

  // Povratne veze
  patientAppointments  Appointment[]  @relation("PatientAppointments")
  doctorAppointments   Appointment[]  @relation("DoctorAppointments")
}

model Appointment {
  id          Int         @id @default(autoincrement())
  title       String      @default("Rutinski pregled")
  patient     Users       @relation("PatientAppointments", fields: [patient_id], references:[id])
  patient_id  Int
  doctor      Users       @relation("DoctorAppointments", fields: [doctor_id], references:[id])
  doctor_id   Int
  start_time  DateTime
  diagnostics Diagnostic[]
  created_at  DateTime    @default(now()) @db.Timestamp(0)
}

model Diagnostic {
  id             Int            @id @default(autoincrement())
  appointment    Appointment    @relation(fields: [appointment_id], references:[id])
  appointment_id Int
  description    String
  medicalRecords MedicalRecord[]
}

model MedicalRecord {
  id            Int         @id @default(autoincrement())
  diagnostic    Diagnostic  @relation(fields:[diagnostic_id], references:[id])
  diagnostic_id Int
  created_at    DateTime    @default(now()) @db.Timestamp(0)
  updated_at    DateTime    @updatedAt
}